version: '3'
services:

    # ----------------------------------------
    # PLEX
    # Robust Media Server
    # ----------------------------------------
    plex:
        container_name: plex
        image: plexinc/pms-docker:${PMSTAG}
        restart: unless-stopped
        networks:
            - web
        ports:
            - '${IP_ADDRESS}:32400:32400/tcp'
            - '${IP_ADDRESS}:3005:3005/tcp'
            - '${IP_ADDRESS}:8324:8324/tcp'
            - '${IP_ADDRESS}:32469:32469/tcp'
            - '${IP_ADDRESS}:1900:1900/udp'
            - '${IP_ADDRESS}:32410:32410/udp'
            - '${IP_ADDRESS}:32412:32412/udp'
            - '${IP_ADDRESS}:32413:32413/udp'
            - '${IP_ADDRESS}:32414:32414/udp'
        environment:
            - TZ=${TZ}
            - PLEX_UID=${PUID}
            - PLEX_GID=${PGID}
            - PLEX_CLAIM=${PMSTOKEN}
            - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
            - ALLOWED_NETWORKS=${CIDR_ADDRESS}
        hostname: ${HOSTNAME}
        volumes:
            - './config/plex:/config'
            - '/media/mediabot/transcode:/transcode'
            - '/media/mediabot/library/movies:/data/movies'
            - '/media/mediabot/library/tv:/data/tv'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=32400'
            - 'traefik.frontend.rule=Host:plex.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'

    # ----------------------------------------
    # DELUGEVPN
    # Deluge Torrent Client + VPN
    # ----------------------------------------
    arch-delugevpn:
        image: binhex/arch-delugevpn
        container_name: delugevpn
        restart: unless-stopped
        networks:
            - web
        ports:
            - '${IP_ADDRESS}:8118:8118'
            - '${IP_ADDRESS}:58846:58846'
            - '${IP_ADDRESS}:58946:58946'
        expose:
            - 8112
        cap_add:
            - NET_ADMIN
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
            - VPN_ENABLED=yes
            - VPN_USER=${VPNUNAME}
            - VPN_PASS=${VPNPASS}
            - VPN_REMOTE=${VPN_REMOTE}
            - VPN_PORT=1198
            - VPN_PROTOCOL=udp
            - VPN_DEVICE_TYPE=tun
            - VPN_PROV=${VPNPROVIDER}
            - STRONG_CERTS=no
            - ENABLE_PRIVOXY=yes
            - STRICT_PORT_FORWARD=yes
            - LAN_NETWORK=${CIDR_ADDRESS}
            - NAME_SERVERS=37.235.1.174,8.8.8.8,37.235.1.177,8.8.4.4
            - DEBUG=false

        volumes:
            - '/media/mediabot/downloads:/data'
            - './config/delugevpn:/config'
            - './config/ovpn/${VPNPROVIDER}:/config/openvpn'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8112'
            - 'traefik.frontend.rule=Host:deluge.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # SONARR
    # TV Series Management
    # ----------------------------------------
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        networks:
            - web
        expose:
            - 8989
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './config/sonarr:/config'
            - '/media/mediabot/downloads/completed:/data/completed'
            - '/media/mediabot/library/tv:/tv'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8989'
            - 'traefik.frontend.rule=Host:tv.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # RADARR
    # Movie Management
    # ----------------------------------------
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        networks:
            - web
        expose:
            - 7878
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './config/radarr:/config'
            - '/media/mediabot/downloads/completed:/data/completed'
            - '/media/mediabot/library/movies:/movies'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=7878'
            - 'traefik.frontend.rule=Host:movies.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # JACKETT
    # RSS/TORZNAB Feed Creator
    # ----------------------------------------
    jackett:
        image: linuxserver/jackett
        container_name: jackett
        restart: unless-stopped
        networks:
            - web
        expose:
            - 9117
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './config/jackett:/config'
            - '/media/mediabot/downloads/torrent-blackhole:/downloads'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=9117'
            - 'traefik.frontend.rule=Host:jackett.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # TAUTULLI
    # Monitoring Service for PLEX Usage
    # ----------------------------------------
    # plexpy:
    #     image: linuxserver/tautulli
    #     container_name: plexpy
    #     restart: unless-stopped
    #     networks:
    #         - web
    #     expose:
    #         - 8181
    #     environment:
    #         - TZ=${TZ}
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #     volumes:
    #         - './plexpy:/config'
    #         - './plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
    #         - '/etc/localtime:/etc/localtime:ro'
    #     depends_on:
    #         - plex
    #     labels:
    #         - 'traefik.enable=true'
    #         - 'traefik.docker.network=${STACK_NAME}_web'
    #         - 'traefik.port=8181'
    #         - 'traefik.frontend.rule=Host:plexpy.${DOMAIN}'
    #         - 'traefik.frontend.entryPoints=https'
    #         - 'traefik.frontend.headers.forceSTSHeader=true'
    #         - 'traefik.frontend.headers.STSSeconds=315360000'
    #         - 'traefik.frontend.headers.STSIncludeSubdomains=true'
    #         - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # OMBI
    # Request Service for Plex Content
    # ----------------------------------------
    # ombi:
    #     image: linuxserver/ombi
    #     container_name: ombi
    #     restart: unless-stopped
    #     networks:
    #         - web
    #     expose:
    #         - 3579
    #     environment:
    #         - TZ=${TZ}
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #     volumes:
    #         - './ombi:/config'
    #         - '/etc/localtime:/etc/localtime:ro'
    #     labels:
    #         - 'traefik.enable=true'
    #         - 'traefik.docker.network=${STACK_NAME}_web'
    #         - 'traefik.port=3579'
    #         - 'traefik.frontend.rule=Host:request.${DOMAIN}'
    #         - 'traefik.frontend.entryPoints=https'
    #         - 'traefik.frontend.headers.forceSTSHeader=true'
    #         - 'traefik.frontend.headers.STSSeconds=315360000'
    #         - 'traefik.frontend.headers.STSIncludeSubdomains=true'
    #         - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # PORTAINER
    # Docker Container Management
    # ----------------------------------------
    portainer:
        image: portainer/portainer:latest
        container_name: portainer
        restart: unless-stopped
        networks:
            - web
        expose:
            - 9000
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './config/portainer:/data'
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=9000'
            - 'traefik.frontend.rule=Host:portainer.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # WATCHTOWER
    # Automatic Update Service for Docker VMs
    # ----------------------------------------
    watchtower:
        image: v2tec/watchtower
        container_name: watchtower
        restart: unless-stopped
        networks:
            - internal
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
            - WATCHTOWER_NOTIFICATIONS=email
            - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SMTP_FROM}
            - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASS}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/ssl/certs:/etc/ssl/certs'
        command: --schedule @midnight --cleanup
        labels:
            - 'traefik.enable=false'

    # ----------------------------------------
    # NETDATA
    # System Resource Monitoring Service
    # ----------------------------------------
    # netdata:
    #     image: titpetric/netdata
    #     container_name: netdata
    #     restart: unless-stopped
    #     networks:
    #         - web
    #     expose:
    #         - 19999
    #     environment:
    #         - TZ=${TZ}
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #     cap_add:
    #         - SYS_PTRACE
    #     volumes:
    #         - '/proc:/host/proc:ro'
    #         - '/sys:/host/sys:ro'
    #         - '/etc/localtime:/etc/localtime:ro'
    #         - '/var/run/docker.sock:/var/run/docker.sock'
    #     labels:
    #         - 'traefik.enable=true'
    #         - 'traefik.docker.network=${STACK_NAME}_web'
    #         - 'traefik.port=19999'
    #         - 'traefik.frontend.rule=Host:netdata.${DOMAIN}'
    #         - 'traefik.frontend.entryPoints=https'
    #         - 'traefik.frontend.headers.forceSTSHeader=true'
    #         - 'traefik.frontend.headers.STSSeconds=315360000'
    #         - 'traefik.frontend.headers.STSIncludeSubdomains=true'
    #         - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # MUXIMUX
    # Web Frontend for HTPC Management
    # ----------------------------------------
    muximux:
        image: linuxserver/muximux
        container_name: muximux
        restart: unless-stopped
        networks:
            - web
        expose:
            - 80
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './config/muximux:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=80'
            - 'traefik.frontend.rule=Host:${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # # ----------------------------------------
    # # DUPLICATI
    # # Backup Software
    # # ----------------------------------------
    # duplicati:
    #     image: linuxserver/duplicati
    #     container_name: duplicati
    #     restart: unless-stopped
    #     networks:
    #         - web
    #     expose:
    #         - 8200
    #     environment:
    #         - TZ=${TZ}
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #     volumes:
    #         - './duplicati:/config'
    #         - '/media/Media/Media:/media'
    #         - '/etc/localtime:/etc/localtime:ro'
    #     labels:
    #         - 'traefik.enable=true'
    #         - 'traefik.docker.network=${STACK_NAME}_web'
    #         - 'traefik.port=8200'
    #         - 'traefik.frontend.rule=Host:duplicati.${DOMAIN}'
    #         - 'traefik.frontend.entryPoints=https'
    #         - 'traefik.frontend.headers.forceSTSHeader=true'
    #         - 'traefik.frontend.headers.STSSeconds=315360000'
    #         - 'traefik.frontend.headers.STSIncludeSubdomains=true'
    #         - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # InfluxDB
    # Time Series Database
    # ----------------------------------------
    # influxdb:
    #     image: influxdb
    #     container_name: influxdb
    #     restart: unless-stopped
    #     networks:
    #         - internal
    #     expose:
    #         - 8086
    #     environment:
    #         - TZ=${TZ}
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #         - INFLUXDB_DB=speedtest; CREATE DATABASE varken;
    #     volumes:
    #         - './influxdb:/var/lib/influxdb'
    #     labels:
    #         - 'traefik.enable=false'

    # ----------------------------------------
    # Chronograf
    # Dashboard Tool for Speedtest
    # ----------------------------------------
    # chronograf:
    #     image: chronograf
    #     container_name: chronograf
    #     restart: unless-stopped
    #     networks:
    #         - web
    #         - internal
    #     expose:
    #         - 8888
    #     environment:
    #         - TZ=${TZ}
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #     volumes:
    #         - './chronograf:/var/lib/chronograf'
    #     command:
    #         - chronograf
    #         - --influxdb-url=http://influxdb:8086
    #     depends_on:
    #         - influxdb
    #     labels:
    #         - 'traefik.enable=true'
    #         - 'traefik.docker.network=${STACK_NAME}_web'
    #         - 'traefik.port=8888'
    #         - 'traefik.frontend.rule=Host:chronograf.${DOMAIN}'
    #         - 'traefik.frontend.entryPoints=https'
    #         - 'traefik.frontend.headers.forceSTSHeader=true'
    #         - 'traefik.frontend.headers.STSSeconds=315360000'
    #         - 'traefik.frontend.headers.STSIncludeSubdomains=true'
    #         - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # Speedtest
    # Speedtest-CLI and Post to InfluxDB
    # ----------------------------------------
    # speedtest:
    #     image: phikai/speedtest
    #     container_name: speedtest
    #     restart: unless-stopped
    #     networks:
    #         - internal
    #     environment:
    #         - TZ=${TZ}
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #         - TEST_INTERVAL=${SPEEDTEST_INTERVAL}
    #     depends_on:
    #         - influxdb
    #     labels:
    #         - 'traefik.enable=false'

    # ----------------------------------------
    # Varken
    # Standalone Plex Data Aggeregator
    # ----------------------------------------
    # varken:
    #     image: boerderij/varken
    #     container_name: varken
    #     restart: unless-stopped
    #     networks:
    #         - internal
    #     environment:
    #         - TZ=${TZ}
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #     volumes:
    #         - './varken:/config'
    #         - '/etc/localtime:/etc/localtime:ro'
    #     depends_on:
    #         - influxdb
    #     labels:
    #         - 'traefik.enable=false'

    # ----------------------------------------
    # Grafana
    # Frontend for Varken
    # ----------------------------------------
    # grafana:
    #     image: grafana/grafana
    #     container_name: grafana
    #     restart: unless-stopped
    #     networks:
    #         - web
    #         - internal
    #     expose:
    #         - 3000
    #     user: "0"
    #     environment:
    #         - TZ=${TZ}
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #         - GF_SERVER_DOMAIN=grafana.${DOMAIN}
    #         - GF_SERVER_ROOT_URL=https://grafana.${DOMAIN}
    #         - GF_PATHS_DATA=/config/data
    #         - GF_PATHS_LOGS=/config/logs
    #         - GF_PATHS_PLUGINS=/config/plugins
    #         - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    #         - GF_SMTP_ENABLED=true
    #         - GF_SMTP_HOST=${SMTP_SERVER}:${SMTP_PORT}
    #         - GF_SMTP_USER=${SMTP_USER}
    #         - GF_SMTP_PASSWORD=${SMTP_PASS}
    #         - GF_SMTP_FROM_ADDRESS=${SMTP_FROM}
    #     volumes:
    #         - './grafana:/config'
    #     depends_on:
    #         - influxdb
    #     labels:
    #         - 'traefik.enable=true'
    #         - 'traefik.docker.network=${STACK_NAME}_web'
    #         - 'traefik.port=3000'
    #         - 'traefik.frontend.rule=Host:grafana.${DOMAIN}'
    #         - 'traefik.frontend.entryPoints=https'
    #         - 'traefik.frontend.headers.forceSTSHeader=true'
    #         - 'traefik.frontend.headers.STSSeconds=315360000'
    #         - 'traefik.frontend.headers.STSIncludeSubdomains=true'
    #         - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # TRAEFIK
    # Reverse Proxy + SSL Support
    # ----------------------------------------
    traefik:
        image: traefik:v1.7.16
        container_name: traefik
        restart: unless-stopped
        networks:
            - web
        ports:
            - '80:80'
            - '443:443'
            - '8080:8080'
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - './config/traefik:/etc/traefik/acme'
        command:
            - --docker
            - --api
            - --loglevel=debug
            - "--entryPoints=Name:https Address::443 TLS"
            - "--entryPoints=Name:http Address::80 Redirect.EntryPoint:https"
            - --acme.entrypoint=https 
            - --acme=true 
            - --acme.domains=${DOMAIN}
            - --acme.email=${EMAIL}
            - --acme.ondemand=true 
            - --acme.onhostrule
            - --acme.httpchallenge
            - --acme.httpchallenge.entrypoint=http
            - --acme.storage=etc/traefik/acme/acme.json
            - --docker.watch
        networks:
            - web
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8080'
            - 'traefik.frontend.rule=Host:traefik.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.auth.basic=${TRAEFIK_AUTH}'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

########################
# GLOBAL CONFIGURATION #
########################

networks:
    internal:
    web:

